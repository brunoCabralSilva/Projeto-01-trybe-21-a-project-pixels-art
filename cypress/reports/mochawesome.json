{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 26,
    "pending": 0,
    "failures": 15,
    "start": "2022-03-21T23:23:26.130Z",
    "end": "2022-03-21T23:26:44.596Z",
    "duration": 198466,
    "testsRegistered": 41,
    "passPercent": 63.41463414634146,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "30b1cd6a-b7bf-4a93-bf6d-d2d0882bb46d",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09f7742f-f633-4158-b02b-b18e38d4554c",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "3485fdf5-86fc-418c-af69-ea8a7773f292",
              "parentUUID": "09f7742f-f633-4158-b02b-b18e38d4554c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3485fdf5-86fc-418c-af69-ea8a7773f292"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 2229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "a8dd245d-eafc-492c-afdf-cfbf3569d924",
              "parentUUID": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f880e633-7848-4b7b-a72d-a9f1890a6f2a",
              "parentUUID": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 1097,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "8eed42e7-264c-40f1-8717-e1f25d29446d",
              "parentUUID": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 1287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "01c5aa0b-80da-4c97-a6df-c994536ccb4d",
              "parentUUID": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "01acdf28-4adb-42d3-8178-ff756db6bbbd",
              "parentUUID": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "178a2929-6370-4f3e-b773-a09195c65921",
              "parentUUID": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "bacace79-d741-42b4-b1bf-3b15061ce6d6",
              "parentUUID": "d4fae583-7530-43b5-8ed3-4ddcf15f96ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8dd245d-eafc-492c-afdf-cfbf3569d924",
            "f880e633-7848-4b7b-a72d-a9f1890a6f2a",
            "8eed42e7-264c-40f1-8717-e1f25d29446d",
            "01c5aa0b-80da-4c97-a6df-c994536ccb4d",
            "01acdf28-4adb-42d3-8178-ff756db6bbbd",
            "178a2929-6370-4f3e-b773-a09195c65921",
            "bacace79-d741-42b4-b1bf-3b15061ce6d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "48d69da3-186f-454b-8ef7-18ea3186eb95",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "82a10fdc-aa94-47db-a850-df7e0374a947",
              "parentUUID": "48d69da3-186f-454b-8ef7-18ea3186eb95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1b4b8b09-e14d-4af7-b8cb-6c22602533a1",
              "parentUUID": "48d69da3-186f-454b-8ef7-18ea3186eb95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82a10fdc-aa94-47db-a850-df7e0374a947",
            "1b4b8b09-e14d-4af7-b8cb-6c22602533a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1901,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7e93fee-a05b-4467-a620-6ca12be6fb0f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "772914c3-25ee-4502-8986-205728b6d905",
              "parentUUID": "f7e93fee-a05b-4467-a620-6ca12be6fb0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 952,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "f1c3dbbc-8c6a-494a-8bad-963a33761dda",
              "parentUUID": "f7e93fee-a05b-4467-a620-6ca12be6fb0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 2194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "fd5f4370-7609-4041-a249-e51b0e69b8ec",
              "parentUUID": "f7e93fee-a05b-4467-a620-6ca12be6fb0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 4063,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8d81d9ea-ecf1-41c9-bd23-2acac2550656",
              "parentUUID": "f7e93fee-a05b-4467-a620-6ca12be6fb0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "772914c3-25ee-4502-8986-205728b6d905",
            "f1c3dbbc-8c6a-494a-8bad-963a33761dda",
            "fd5f4370-7609-4041-a249-e51b0e69b8ec",
            "8d81d9ea-ecf1-41c9-bd23-2acac2550656"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7788,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b18c9d3a-4226-43a4-8452-77eddc0ec11a",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 2750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e48b6fee-f19e-4d6a-8505-24f381c6d03e",
              "parentUUID": "b18c9d3a-4226-43a4-8452-77eddc0ec11a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 2975,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "72e4faa8-52a9-4538-8ab7-3c13723b1340",
              "parentUUID": "b18c9d3a-4226-43a4-8452-77eddc0ec11a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e48b6fee-f19e-4d6a-8505-24f381c6d03e",
            "72e4faa8-52a9-4538-8ab7-3c13723b1340"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5725,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c353cc2c-d44b-4e54-8092-eaf51e39db22",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 1540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d7b6aff4-79eb-421b-aea6-f0c0c2433774",
              "parentUUID": "c353cc2c-d44b-4e54-8092-eaf51e39db22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 1093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "26b33570-41ee-4b8c-9e2e-357833eff2ea",
              "parentUUID": "c353cc2c-d44b-4e54-8092-eaf51e39db22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7b6aff4-79eb-421b-aea6-f0c0c2433774",
            "26b33570-41ee-4b8c-9e2e-357833eff2ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d4b424e-8b4a-4667-abcd-5e5b77eca5f7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "bc4f3d00-6942-4632-bc48-b7ae0bf22256",
              "parentUUID": "6d4b424e-8b4a-4667-abcd-5e5b77eca5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 18248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "9759059e-f84b-481b-b89b-c622a915fb1d",
              "parentUUID": "6d4b424e-8b4a-4667-abcd-5e5b77eca5f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc4f3d00-6942-4632-bc48-b7ae0bf22256",
            "9759059e-f84b-481b-b89b-c622a915fb1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "faed6cfc-b88b-4ac7-9691-16bfb478d961",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 5795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "3b256b26-f834-4849-aaa2-9e981335b65b",
              "parentUUID": "faed6cfc-b88b-4ac7-9691-16bfb478d961",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 16807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "1e5ba2f0-2def-498c-b9e4-4f0c1355867e",
              "parentUUID": "faed6cfc-b88b-4ac7-9691-16bfb478d961",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 9569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "6a66494d-778d-49e5-871c-c10260e5a505",
              "parentUUID": "faed6cfc-b88b-4ac7-9691-16bfb478d961",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b256b26-f834-4849-aaa2-9e981335b65b",
            "1e5ba2f0-2def-498c-b9e4-4f0c1355867e",
            "6a66494d-778d-49e5-871c-c10260e5a505"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c500bb2-fce1-4abc-8e55-3beac787c7e6",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 1844,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "8b5dd002-3bd6-42fa-96d4-11674eca3319",
              "parentUUID": "9c500bb2-fce1-4abc-8e55-3beac787c7e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 1210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "d9d8673d-a70e-4aaf-a2d0-2f380a956a16",
              "parentUUID": "9c500bb2-fce1-4abc-8e55-3beac787c7e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ac67f123-9313-4a63-91bd-8ee01c1e7f31",
              "parentUUID": "9c500bb2-fce1-4abc-8e55-3beac787c7e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 10234,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(255, 255, 0)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(255, 255, 0)'\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "887ed385-fe8a-482b-973a-1c86e67ec0cc",
              "parentUUID": "9c500bb2-fce1-4abc-8e55-3beac787c7e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b5dd002-3bd6-42fa-96d4-11674eca3319",
            "d9d8673d-a70e-4aaf-a2d0-2f380a956a16",
            "ac67f123-9313-4a63-91bd-8ee01c1e7f31"
          ],
          "failures": [
            "887ed385-fe8a-482b-973a-1c86e67ec0cc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13952,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 6059,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c99bcb50-c840-4fce-8e3b-c44c37c70b2e",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 6909,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0af74be0-84cd-4f12-965c-818674dba23c",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 6628,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "97efda34-a2d2-44f8-8185-1c363d94facf",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 6104,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "45341d1e-86f3-4bbc-b8a3-eef5218d1f4d",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 9445,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a2a0d1a-64ef-4cd5-9728-b4aab374297f",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 7569,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "65f4bfa6-7ed6-4a50-b002-7164c39378b9",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 8200,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "415504f7-75a5-4ff9-a333-475b81ecb794",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 7034,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "74d374aa-f3a2-49f1-a5f0-b673c31384c0",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 7287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7b524ecb-55a6-4c1d-a7b4-4fc0f39a3d68",
              "parentUUID": "7681e38b-da88-4ea4-b24f-405ecb9c6c7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c99bcb50-c840-4fce-8e3b-c44c37c70b2e",
            "0af74be0-84cd-4f12-965c-818674dba23c",
            "97efda34-a2d2-44f8-8185-1c363d94facf",
            "45341d1e-86f3-4bbc-b8a3-eef5218d1f4d",
            "4a2a0d1a-64ef-4cd5-9728-b4aab374297f",
            "65f4bfa6-7ed6-4a50-b002-7164c39378b9",
            "415504f7-75a5-4ff9-a333-475b81ecb794",
            "74d374aa-f3a2-49f1-a5f0-b673c31384c0",
            "7b524ecb-55a6-4c1d-a7b4-4fc0f39a3d68"
          ],
          "pending": [],
          "skipped": [],
          "duration": 65235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "babc2b0e-8530-49ec-9372-f2106671413e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 7776,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "36bad220-0e9d-4c4a-b421-80f7fbd13e7a",
              "parentUUID": "babc2b0e-8530-49ec-9372-f2106671413e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 7685,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a988f84e-d67e-4127-96b3-b114f717eb0f",
              "parentUUID": "babc2b0e-8530-49ec-9372-f2106671413e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 7620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45979/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45979/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45979/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45979/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45979/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45979/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "89b89556-1846-4304-9955-52710862d36a",
              "parentUUID": "babc2b0e-8530-49ec-9372-f2106671413e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "36bad220-0e9d-4c4a-b421-80f7fbd13e7a",
            "a988f84e-d67e-4127-96b3-b114f717eb0f",
            "89b89556-1846-4304-9955-52710862d36a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23081,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "02c8274d-4fc9-4a56-831a-0507021eba3b",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 2545,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45979/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45979/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45979/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45979/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45979/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45979/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45979/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "17e13e1c-630b-4ed3-a667-2265e506d41f",
              "parentUUID": "02c8274d-4fc9-4a56-831a-0507021eba3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 2614,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45979/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45979/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45979/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45979/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45979/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45979/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45979/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45979/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45979/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45979/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45979/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45979/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "436aaebc-c45d-433d-b10b-c12ad346cc24",
              "parentUUID": "02c8274d-4fc9-4a56-831a-0507021eba3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "17e13e1c-630b-4ed3-a667-2265e506d41f",
            "436aaebc-c45d-433d-b10b-c12ad346cc24"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}